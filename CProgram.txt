To run a C program just input the path
    /home/user/Cprogram.c
    ./Cprogram

Other builtin programs like ls are located in the folder specified by the env var path
    env - to see env vars

Only see the result of env that has keyword PATH
    env | grep PATH
    grep - A search tool that is basically a crtl + f for your hole computer

echo the PATH var
    echo $PATH
    $PATH - the $ states that the var is an env var

Find the location of the ls program
    whereis ls

Make your own commands like ls
    export PATH=/home/ian/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin:/home/commands
    (This is just the PATH env var with another dir at the end full of our commands)

Vim is good because sometimes it is the only text editor
    i - enter insert mode
    esc - to escape
    : - start commands
    :w - save
    :q - quit
    :wq - save and quit
    
    :syntax on - turns on syntax
    :set number - turns on line numbers

See CProgram.c 

See the man page for printf
    man 3 printf - it has to be 3 because that is the programmers manual for linux and 1 is the user commands or just blank

All c programs must be compiled into machine code
    gcc CProgram.c -o CFile -Wall 
        - the -o means that when you compile the program the binary file is named the parameter (CFile)
        - the -Wall enables all warnings that are printed when the program is compiled

Pass input with spaces by using ""
    ./CFile Ian 
    ./CFile "Ian Kilty"

See the exit code of the previous ran program
    echo $? - either 0 or 1

Use env vars by prefixing a $
    ./CFile $USER - Knock, knock, ian
    ./CFile \$USER - Knock, knock, $USER - because \ escapes all formatting


